#include <bits/stdc++.h>

using namespace std;

const int N = 100;

void setIO(string s) {
	if (!s.empty()){
		freopen((s + ".in").c_str(), "r", stdin);
		freopen((s + ".out").c_str(), "w", stdout);
	}
}

int dr[] = {0, 0,-3,3, 1,1,-1,-1, 2,-2,2,-2, 1,-1,0,0};
int dc[] = {3,-3, 0,0, 2,-2,2,-2, 1,1,-1,-1, 0,0,1,-1};

signed main(){

	setIO("visitfj");
	
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int n,t;cin>>n>>t;
	vector<vector<int>>a(n,vector<int>(n))	,dp(n,vector<int>(n,0x3f3f3f3f));
	for(int i=0;i<n;++i)
		for(int j=0;j<n;++j)
			cin>>a[i][j];

	priority_queue<pair<int,pair<int,int>>,
	vector<pair<int,pair<int,int>>>,
	greater<pair<int,pair<int,int>>>>pq;
	
	dp[0][0] = 0; 
	pq.push({0,{0,0}});
	
	while(!pq.empty()){
		pair<int,pair<int,int>>src = pq.top();
		pq.pop();
		if (src.first != dp[src.second.first][src.second.second])
			continue;
		int dis = n+n-src.second.second-src.second.first-2; 
		if (dis <= 2)
			dp[n-1][n-1] = min(dp[n-1][n-1],src.first+t*dis); 
		for(int i=0;i<16;++i){
			int nr = src.second.first+dr[i];
			int nc = src.second.second+dc[i];
			if (nr < 0 || nr >= n || nc < 0 || nc >= n)
				continue;
			int nd = src.first+t*3+a[nr][nc];
			if (nd >= dp[nr][nc])
				continue;
			dp[nr][nc] = nd;
			pq.push({nd,{nr,nc}});
		}
	}
	cout<<dp[n-1][n-1]; 
}
