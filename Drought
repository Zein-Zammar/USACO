#include "bits/stdc++.h"
using namespace std;

#ifdef Nero
#include "Deb.h"
#else
#define deb(...)
#endif

const int M = 1003;
const int md = (int) 1e9 + 7; 

inline void add (int& a, int b) {
  a += b;
  if (a < 0) a += md;
  if (a >= md) a -= md; 
}

inline int solve (int keep, int n, const vector<int>& h) {
  vector<vector<int>> dp(n + 1, vector<int> (M)); 
  vector<vector<int>> diff(n + 1, vector<int> (M)); 
  dp[0][0] = 1; 
  for (int i = 0; i < n; ++i) {
    int s = 0; 
    for (int pre = 0; pre <= h[i]; ++pre) {
      add(s, diff[i][pre]); 
      add(dp[i][pre], s); 
      if (dp[i][pre] == 0) {
        continue;
      }
      int remHealth = h[i] - pre - keep; 
      int nx = remHealth; 
      if (i + 1 < n) {
        nx = min(nx, (h[i + 1] - keep)); 
      }
      add(diff[i + 1][0], dp[i][pre]);
      add(diff[i + 1][nx + 1], -dp[i][pre]);
    }
  }
  return diff[n][0]; 
}

signed main(){
  ios::sync_with_stdio(false);
  int n;
  cin.tie(nullptr);
  cin >> n;
  vector<int> h(n); 
  for (int i = 0; i < n; ++i) {
    cin >> h[i]; 
  }
  int ans = 0; 
  if (n & 1) {
    int mn = *min_element(h.begin(), h.end()); 
    for (int i = 0; i <= mn; ++i) {
      add(ans, solve(i, n, h)); 
    }
  } else {
    ans = solve(0, n, h);
  }
  cout << ans << '\n'; 
  return 0;
}
