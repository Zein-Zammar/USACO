#include <bits/stdc++.h>
#define lx (nd<<1)
#define rx ((nd<<1)|1)

using namespace std;

void setIO(string s) {
	 if (!s.empty()){
			freopen((s + ".in").c_str(), "r", stdin);
			freopen((s + ".out").c_str(), "w", stdout);
	 }
}

int seg[400005]; 

void upd(int nd,int l,int r,int p){
	if (l == r){
		seg[nd] = !seg[nd]; 
		return;
	}
	int mid = (l + r) >> 1;
	if (p <= mid){
		upd(lx,l,mid,p);
	}
	else{
		upd(rx,mid+1,r,p);
	}
	seg[nd] = seg[lx]+seg[rx]; 
}

int qry(int nd,int l,int r,int s,int e){
	if (l > e || r < s)return 0; 
	if (l >= s && r <= e)
			return seg[nd];
	int mid = (l + r) >> 1;
	return qry(lx,l,mid,s,e)+qry(rx,mid+1,r,s,e);	
}

signed main(){

	setIO("circlecross");

	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int n;cin>>n;
	vector<int>la(n+1);
	n = (n << 1);
	vector<int>a(n+1);
	for(int i=1;i<=n;++i){
	 cin>>a[i];
	}
	int ans = 0; 
	for(int i=1;i<=n;++i){
		if (!la[a[i]]){
			la[a[i]] = i;
			upd(1,1,n,i);
		}
		else{
			upd(1,1,n,la[a[i]]);
			ans += qry(1,1,n,la[a[i]],i);
		}
	}
	cout<<ans; 
}/// Check Long Long before sumbmtting ///
