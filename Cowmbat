#include <bits/stdc++.h>

using namespace std;

void setIO(string s) {
	 if (!s.empty()){
			freopen((s + ".in").c_str(), "r", stdin);
			freopen((s + ".out").c_str(), "w", stdout);
	 }
}

const int N = 2e5+5, M = 30;
int n, m, k;
int cst[M][M],pref[N][M],dp[N][M];

int bt(int id,int la){
	if (id > n)return 1e9; 
	if (id == n)return 0; 
	int&ret = dp[id][la];
	if(~ret)return ret;
	ret = 1e9; 
	for(int i=0;i<m;++i){
		int exc = 0;
		if (id)exc = pref[id-1][i]; 
		ret = min(ret, bt(id+k,i)+pref[id+k-1][i]-exc);
		if (i == la){
			ret = min(ret, bt(id+1,i)+pref[id][i]-exc);
		}
	}
	return ret; 
}

signed main(){

	setIO("cowmbat");

	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	memset(dp,-1,sizeof dp);
	memset(cst,0x3f3f3f3f,sizeof cst);
	cin>>n>>m>>k;
	string s;cin>>s; 
	for(int i=0;i<m;++i)
		for(int j=0;j<m;++j)
			cin>>cst[i][j];
	for(int kk=0;kk<m;++kk)
		for(int i=0;i<m;++i)
			for(int j=0;j<m;++j)
				cst[i][j] = min(cst[i][j],cst[i][kk]+cst[kk][j]);
	for(int i=0;i<m;++i)
		pref[0][i] = cst[s[0]-'a'][i];
	for(int i=1;i<n;++i)
		for(int j=0;j<m;++j)
			pref[i][j] = pref[i-1][j]+cst[s[i]-'a'][j];
	cout<<bt(0,26);
}/// Check Long Long before sumbmtting ///
