#include <bits/stdc++.h>
#define lx (nd<<1)
#define rx ((nd<<1)|1)

using namespace std;

const int N = 200005;
int n,a[N],la[N],nx[N],seg[N<<2];

void upd(int nd,int l,int r,int id,int v){
    if (l == r)return void(seg[nd] += v);
    int mid = (l+r)>>1; 
    if (id <= mid)upd(lx,l,mid,id,v);
    else upd(rx,mid+1,r,id,v);
    seg[nd] = seg[lx]+seg[rx];
}

int get(int nd,int l,int r,int s,int e){
    if (l > e || r < s)return 0;
    if (l >= s && r <= e)return seg[nd];
    int mid = (l+r)>>1;
    return get(lx,l,mid,s,e)+get(rx,mid+1,r,s,e);
}

signed main(){

    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    cin>>n;
    for(int i=1;i<=n;++i){
        cin>>a[i];
        la[a[i]] = n+1; 
    }
    for(int i=n;i;--i){
        nx[i] = la[a[i]];
        la[a[i]] = i; 
    }
    for(int i=1;i<=n;++i)
        if (i == la[a[i]])
            upd(1,1,n+1,i,1);
    long long ans = 0; 
    for(int i=1;i<n;++i){
        ans += get(1,1,n+1,i+1,nx[i]-1);
        upd(1,1,n+1,i,-1);
        upd(1,1,n+1,nx[i],1);
    }
    cout<<ans; 

}
