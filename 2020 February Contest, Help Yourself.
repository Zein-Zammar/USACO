#include "bits/stdc++.h"
using namespace std;

#ifdef Nero
#include "Deb.h"
#else
#define deb(...)
#endif

const int M = 2e5 + 5; 
const int md = (int) 1e9 + 7; 

int tree[M]; 
inline void upd (int id, int v) {
  while (id < M) {
    tree[id] += v;
    id += id & -id;
  }
}

inline long long qry (int id) {
  long long ret = 0; 
  while (id) {
    ret += tree[id];
    id -= id & -id; 
  }
  return ret; 
}


int main() {
  freopen("help.in", "r", stdin);
  freopen("help.out", "w", stdout); 
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  int n;
  cin >> n; 
  vector<pair<int, int>> a(n);
  for (int i = 0; i < n; ++i) {
    cin >> a[i].first >> a[i].second; 
  }
  sort(a.begin(), a.end()); 
  vector<int> p2(n); 
  p2[0] = 1;
  for (int i = 1; i < n; ++i) {
    p2[i] = p2[i - 1] + p2[i - 1];
    if (p2[i] >= md) p2[i] -= md;
  }
  int ans = 0; 
  for (int i = 0; i < n; ++i) {
    int cnt = n - i - 1;
    auto [l, r] = a[i];
    cnt += qry(l); 
    ans += p2[cnt];
    if (ans >= md) ans -= md;
    upd(r, 1); 
  }
  cout << ans << '\n'; 
  return 0;
}
