#include <bits/stdc++.h>

using namespace std;

void setIO(string s) {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    if (!s.empty()){
        freopen((s + ".in").c_str(), "r", stdin);
        freopen((s + ".out").c_str(), "w", stdout);
    }
}

const int N = 5001;
const int mod = 1e9+7;
int n, m, k;
int t[N],f[N],dp[N],len[N];
vector<int>v[N];

void add(int&a,int b){
    a += b;
    if (a >= mod)a -= mod;
}

int mul(int a, int b){
    return (1ll * (a%mod) * (b%mod)) % mod;
}

int fp(int n, int p){
    if(!p) return 1;
    if(p&1) return mul(n, fp(n, p-1));
    int tmp = fp(n, p/2);
    return mul(tmp, tmp);
}

int bt(int rem){
    if (rem < 0)return 0;
    if (rem == 0)return 1;
    int&ret = dp[rem];
    if(~ret)return ret;
    ret = 0;  
    for(int i=0;i<n;++i){
        add(ret, bt(rem-len[i]));
    }
    return ret;
}

signed main(){

    setIO("poetry");

    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    memset(dp,-1,sizeof dp);
    cin>>n>>m>>k;
    for(int i=0;i<n;++i){
        cin>>len[i]>>t[i];
        v[t[i]].push_back(len[i]);
    }
    for(int i=0;i<m;++i){
        char c;cin>>c;
        ++f[c-'A'];
    }
    vector<int>p;
    for(int i=1;i<=n;++i){
        int s = 0; 
        for(auto&it:v[i])
            add(s, bt(k-it));
        if (s)p.push_back(s);
    }
    int ans = 1; 
    for(int i=0;i<26;++i){
        if (!f[i])continue;
        int s = 0;
        for(auto&it:p){
            s = ((s%mod)+(fp(it,f[i])%mod))%mod;
        }
        ans = mul(ans,s);
    }
    cout<<ans; 
}
